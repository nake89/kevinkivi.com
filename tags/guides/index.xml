<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on kevinkivi.com</title><link>/tags/guides/</link><description>Recent content in Guides on kevinkivi.com</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2017 21:55:18 +0000</lastBuildDate><atom:link href="/tags/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Fix Certificate error with wget</title><link>/posts/certificate-error-with-wget/</link><pubDate>Sat, 22 Apr 2017 21:55:18 +0000</pubDate><guid>/posts/certificate-error-with-wget/</guid><description>So, you are unable to download from https sources with wget. Instead you get the following error.
ERROR: The certificate of \`www.google.com&amp;#39; is not trusted. ERROR: The certificate of \`www.google.com&amp;#39; hasn&amp;#39;t got a known issuer. No problemo. This error is most likely occurring for missing root certificates. Simply install the ca-certificates package:
sudo apt-get install ca-certificates This should work on Ubuntu and Debian derivatives.</description></item><item><title>How to Search Contents of File in Linux</title><link>/posts/search-contents-file-linux/</link><pubDate>Sat, 15 Apr 2017 17:48:48 +0000</pubDate><guid>/posts/search-contents-file-linux/</guid><description>This is something you need to do often for one reason or another. Maybe you have a bunch of text files, which have been named horribly and you have no idea which file has the thing you are looking for, but you happen to remember a word in that file. Or maybe you need to find which file contains a certain variable to find the root cause of an error you are experiencing in your script.</description></item><item><title>How to pass command-line arguments in node.js</title><link>/posts/pass-command-line-arguments-node-js/</link><pubDate>Sat, 15 Apr 2017 16:43:25 +0000</pubDate><guid>/posts/pass-command-line-arguments-node-js/</guid><description>So you want to pass information to your program. This can be quite easily achieved. The arguments are contained in process.argv. arg.js
console.log(process.argv[0]); console.log(process.argv[1]); console.log(process.argv[2]); console.log(process.argv[3]); console.log(process.argv[4]); Testing the code:
nake89@debian:~/nodeprojects/soacomp$ node arg.js what is this /home/nake89/.nvm/versions/node/v6.10.2/bin/node /home/nake89/nodeprojects/soacomp/arg.js what is this So the first line is the location of your node executable and the second one is the location of the script. These are largely unnecessary which is why the following script is so popular.</description></item><item><title>Installing Vim UltiSnips on Debian 7 Wheezy</title><link>/posts/ultisnips-debian-wheezy/</link><pubDate>Sat, 15 Apr 2017 11:10:42 +0000</pubDate><guid>/posts/ultisnips-debian-wheezy/</guid><description>I had some problems recently installing UltiSnips on my Debian Wheezy. The first problem is that the Vim which comes with Debian does not come precompiled with Python, which UltiSnips needs. The second problem is that the version of the Vim is too old and is unsupported by UltiSnips. First uncomment or add the following line to your /etc/apt/sources.list. This is because the version of Vim in the default repository is too old.</description></item></channel></rss>