<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nodejs on kevinkivi.com</title><link>/tags/nodejs/</link><description>Recent content in nodejs on kevinkivi.com</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 05 Aug 2021 19:11:00 +0200</lastBuildDate><atom:link href="/tags/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Add GSI to existing DynamodDB table (nodejs, aws-sdk)</title><link>/posts/add-gsi-to-existing-table/</link><pubDate>Thu, 05 Aug 2021 19:11:00 +0200</pubDate><guid>/posts/add-gsi-to-existing-table/</guid><description>If you are using the Serverless Framework, you can create DynamodDB and add one GSI (Global Secondary Index) with cloudformation syntax.
How to add table: https://www.serverless.com/framework/docs/providers/aws/guide/resources/#configuration
Here is the syntax to add GSI: https://cloudkatha.com/solved-cannot-perform-more-than-one-gsi-creation-or-deletion-in-a-single-update/
Official docs related to GSI cloudformation syntax: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html
That&amp;rsquo;s all fine until you need to add another GSI. You can&amp;rsquo;t do that with Cloudformation syntax [1]. Luckily we can do that programatically with Node.js (you could also use another programming language and just use the related aws-sdk library: https://aws.</description></item><item><title>Joker.com automation</title><link>/posts/joker-com-automation/</link><pubDate>Sun, 09 Oct 2016 11:47:48 +0000</pubDate><guid>/posts/joker-com-automation/</guid><description>I&amp;rsquo;ve been working on automation for joker.com, so that I can unlock domains and order the auth-id (epp-key, transfer key) faster. It uses the joker.com API. I wrote it in node.js. It is still in development and I will add more functionality to this application. Here is the npm page: https://www.npmjs.com/package/joker-auto Github: https://github.com/nake89/joker-nodejs
Joker Automation This is a node.js script for automating Joker.com services. Still in early development. Currently only logs you in and unlocks a domain and gives you the auth-id (transfer key) of a domain.</description></item></channel></rss>