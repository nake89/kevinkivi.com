<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Php on kevinkivi.com</title><link>https://kevinkivi.com/tags/php/</link><description>Recent content in Php on kevinkivi.com</description><generator>Hugo -- 0.139.3</generator><language>en</language><lastBuildDate>Tue, 25 Oct 2022 22:01:00 +0200</lastBuildDate><atom:link href="https://kevinkivi.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>VIM and PHP</title><link>https://kevinkivi.com/posts/vim-php/</link><pubDate>Tue, 25 Oct 2022 22:01:00 +0200</pubDate><guid>https://kevinkivi.com/posts/vim-php/</guid><description>&lt;p>To make VIM work more like VSCode, you really want to install VIM plugin called CoC. It adds LSP features to VIM and makes it easy to port VSCode extensions to Vim, and it has great, mature ecosystem: &lt;a href="https://github.com/neoclide/coc.nvim">https://github.com/neoclide/coc.nvim&lt;/a>&lt;/p>
&lt;p>To get PHP language server features, you want to install a PHP language server extension for CoC: &lt;a href="https://github.com/marlonfan/coc-phpls">https://github.com/marlonfan/coc-phpls&lt;/a>&lt;/p>
&lt;p>This extension uses Intelephense in the background and makes it so that you can jump to definitions etc. But some of the features that you are used to have with language servers are missing unless you get premium licence for Intelephense. Like renaming variables.&lt;/p></description></item><item><title>PHP: Curl vs file_get_contents benchmark</title><link>https://kevinkivi.com/posts/php-curl-vs-file_get_contents-benchmark/</link><pubDate>Mon, 13 Aug 2018 17:55:17 +0000</pubDate><guid>https://kevinkivi.com/posts/php-curl-vs-file_get_contents-benchmark/</guid><description>&lt;p>I benchmarked curl vs file_get_contents in &lt;strong>getting headers only&lt;/strong> and returning the HTTP Status Code. Here are the results:&lt;/p>
&lt;pre tabindex="0">&lt;code>kevinkivi@server:~/my/secret/directory$ php curlvsfgctest.php
Testing curl speed
Domain: http://google.com
Status: 301
Domain: http://yahoo.com
Status: 301
Domain: http://nytimes.com
Status: 301
Domain: http://theguardian.com
Status: 301
Domain: http://wikipedia.org
Status: 301
Curl speed was 0.35739207267761
Testing file\_get\_contents speed
Domain: http://google.com
Status: HTTP/1.0 301 Moved Permanently
Domain: http://yahoo.com
Status: HTTP/1.0 301 Moved Permanently
Domain: http://nytimes.com
Status: HTTP/1.1 301 Moved Permanently
Domain: http://theguardian.com
Status: HTTP/1.1 301
Domain: http://wikipedia.org
Status: HTTP/1.1 301 TLS Redirect
file\_get\_contents was 1.7153549194336
&lt;/code>&lt;/pre>&lt;p>Below is the source code:&lt;/p></description></item><item><title>PHP: Namecheap.com API Class</title><link>https://kevinkivi.com/posts/php-namecheap-com-api-class/</link><pubDate>Tue, 16 May 2017 18:19:52 +0000</pubDate><guid>https://kevinkivi.com/posts/php-namecheap-com-api-class/</guid><description>&lt;p>I built a simple to use class in PHP for the namecheap.com API. It supports all of Namecheap&amp;rsquo;s API methods. I released the code on GitHub. Example of usage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">require&lt;/span> &lt;span style="color:#e6db74">&amp;#39;namecheap.class.php&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;YOUR USERNAME&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$apiKey &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;YOUR API KEY&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$clientIp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;IP WHERE THIS YOUR SCRIPT IS HOSTED&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$namecheap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Namecheap&lt;/span> ($username, $apiKey, $clientIp) ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$data\[&lt;span style="color:#e6db74">&amp;#34;Command&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">\&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;namecheap.ssl.getList&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$returned &lt;span style="color:#f92672">=&lt;/span> $namecheap&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">request&lt;/span>($data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">print&lt;/span>&lt;span style="color:#a6e22e">\_r&lt;/span>($returned)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>GitHub release:&lt;a href="https://github.com/nake89/namecheap"> https://github.com/nake89/namecheap&lt;/a>&lt;/p></description></item></channel></rss>