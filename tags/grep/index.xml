<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>grep on kevinkivi.com</title><link>/tags/grep/</link><description>Recent content in grep on kevinkivi.com</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 25 Jul 2021 10:11:00 +0200</lastBuildDate><atom:link href="/tags/grep/index.xml" rel="self" type="application/rss+xml"/><item><title>Say goodbye to grep</title><link>/posts/the-silver-searcher/</link><pubDate>Sun, 25 Jul 2021 10:11:00 +0200</pubDate><guid>/posts/the-silver-searcher/</guid><description>ack is a famous code search tool to replace grep (in a lot of use cases): https://beyondgrep.com/why-ack/
Now there is something even better. There is ag aka The Silver Searcher: ggreer/the_silver_searcher It is like ack, but faster.
Why not just grep? Hella fast. Like really really fast. It is beautifully optimized C. It ignores files from .gitignore Instead of doing this with grep:
grep -R --exclude-dir=node_modules &amp;#39;foobar&amp;#39; /path/to/your/code You can just do (if you have node_modules in your .</description></item><item><title>How to Search Contents of File in Linux</title><link>/posts/search-contents-file-linux/</link><pubDate>Sat, 15 Apr 2017 17:48:48 +0000</pubDate><guid>/posts/search-contents-file-linux/</guid><description>This is something you need to do often for one reason or another. Maybe you have a bunch of text files, which have been named horribly and you have no idea which file has the thing you are looking for, but you happen to remember a word in that file. Or maybe you need to find which file contains a certain variable to find the root cause of an error you are experiencing in your script.</description></item></channel></rss>